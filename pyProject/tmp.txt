#已提交自查站点
submitCount = SELECT COUNT(DISTINCT station_code) as count FROM `task_check_self` WHERE NOT ISNULL(final_score_time) AND task_code like DATE_FORMAT(NOW(), '%Y%m%d%' );
#未提交自查站点
unSubmitCount = SELECT COUNT(DISTINCT station_code) as count FROM `task_check_self` WHERE ISNULL(final_score_time) AND task_code like DATE_FORMAT(NOW(), '%Y%m%d%' );
#违规站点
illegalCount = SELECT COUNT(DISTINCT c.station_id) as count FROM `check_self_result` as c inner JOIN task_check_self as t  on c.task_self_id = t.id WHERE t.task_code like DATE_FORMAT(NOW(), '%Y%m%d%' ) and c.normal_flag = 0;
#每日报表
dailyChart = SELECT c.`name` as region, if(ISNULL(t.final_score_time),"未提交","已提交") as status,COUNT( b.id ) as count FROM `task_check_self` AS t INNER JOIN base_lottery_station AS b RIGHT JOIN core_system_region AS c ON t.station_id = b.id AND b.region_id = c.id AND t.task_code like DATE_FORMAT( NOW( ), '%Y%m%d%' ) WHERE c.use_flag = 1 AND c.`level` = 2 GROUP BY c.`name`,if(ISNULL(t.final_score_time),"未提交","已提交") WITH ROLLUP;
#全市站点状态
stationStatus = SELECT `status`,COUNT(DISTINCT id) as count FROM base_lottery_station where use_flag = 1 GROUP BY `status`;
#各区域状态站点列表
regionalStatusList = SELECT c.NAME, b.`status`, COUNT( DISTINCT b.id ) AS count FROM base_lottery_station AS b RIGHT JOIN core_system_region AS c ON b.region_id = c.id WHERE c.use_flag = 1 AND c.`level` = 2 and b.use_flag = 1 GROUP BY c.`name`,b.`status`;


# 计算某时间段总销量
#allSumSql = SELECT sum(net_amt)  FROM cube_all_sales_info where fk_sale_date in (SELECT date from cube_dim_sale_date where date>=? and date<?)
#allSumSql =  SELECT IFNULL(sum(net_amt),0)  FROM cube_all_sales_info where fk_sale_date in (SELECT date from cube_dim_sale_date where date>=:startTime and date<:endTime) AND company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId))
#2023-01-01  去掉  company  in
allSumSql =  SELECT IFNULL(sum(net_amt),0)  FROM cube_all_sales_info where fk_sale_date in (SELECT date from cube_dim_sale_date where date>=:startTime and date<:endTime);

# 计算区县在某一时间段内的总销量
regionSumSql = SELECT IFNULL(region,'其它') as region1, SUM(net_amt) AS num FROM cube_all_sales_info WHERE fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=? AND date <?) GROUP BY region1 ORDER BY num DESC
# 计算某些渠道对应的区县在某段时间的销量和
# regionCompanySumSaleSql = SELECT IFNULL(region,'其它') as region1, SUM(net_amt) AS num FROM cube_all_sales_info WHERE fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime) AND company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId)) GROUP BY region1 ORDER BY num DESC
# 计算渠道在某一时间段内的总销量
#companySumSql = SELECT IFNULL(company,'其它') as company1, SUM(net_amt) AS num FROM cube_all_sales_info WHERE fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=? AND date <?) GROUP BY company1 ORDER BY num DESC
companySumSql = SELECT IFNULL(company,'其它') as company1, SUM(net_amt) AS num FROM cube_all_sales_info WHERE fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime) AND company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId))  GROUP BY company1 ORDER BY num DESC;
# 计算某一时间段内的每一天的销量变化
#daySumSql =  SELECT date,IFNULL(sum(net_amt),0) as sum FROM cube_dim_sale_date LEFT JOIN cube_all_sales_info as cs on cs.fk_sale_date=cube_dim_sale_date.date WHERE date>= ? AND date < ?  GROUP BY  date ORDER BY date ASC
daySumSql =  SELECT date,IFNULL(sum(net_amt),0) as sum FROM cube_dim_sale_date LEFT JOIN cube_all_sales_info as cs on cs.fk_sale_date=cube_dim_sale_date.date WHERE date>= :startTime AND date < :endTime AND cs.company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId))  GROUP BY  date ORDER BY date ASC;
# 计算某一时间段内各类型的游戏的总销量
# gameTypeSumSql = SELECT bg.`name` AS bgname,bg.logo_url AS bglogo, SUM(cs.net_amt) AS cnum FROM cube_all_sales_info AS cs LEFT JOIN base_game_type AS bg ON cs.fk_game_code = bg.`code` where cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=? AND date <?) GROUP BY bg.`name` ,bg.logo_url ORDER BY cnum DESC
# 计算某一段时间内某渠道各类型游戏的销量和，也可用来只看一天的
gameTypeDaySaleSql =  SELECT bg.`name` AS bgname,bg.logo_url AS bglogo, SUM(cs.net_amt) AS cnum FROM cube_all_sales_info AS cs LEFT JOIN base_game_type AS bg ON cs.fk_game_code = bg.`code` where cs.company in (SELECT `name` FROM base_company_info WHERE id in (:companyId)) AND  cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime ) GROUP BY bg.`name` ,bg.logo_url ORDER BY cnum DESC
gameTypeDaySaleSqlSubCenter = SELECT bg.`name` AS bgname,bg.logo_url AS bglogo, ifnull(SUM(cs.net_amt),0)  AS cnum FROM cube_all_sales_info AS cs LEFT JOIN base_game_type AS bg ON cs.fk_game_code = bg.`code` where cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime ) AND cs.region IN (:region) GROUP BY bg.`name` ,bg.logo_url ORDER BY cnum DESC;
# 计算某一时间段内各站点的销售总额并降序取前50
#siteSumSql = SELECT cs.fk_station_code AS csCode, SUM(cs.net_amt) AS csAmt FROM cube_sales_info AS cs where cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=? AND date <?) GROUP BY cs.fk_station_code ORDER BY csAmt desc LIMIT 50
siteSumSql =  SELECT cs.fk_station_code AS csCode, SUM(cs.net_amt) AS csAmt FROM cube_sales_info AS cs where cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime) AND cs.fk_station_code IN (SELECT `code` FROM cube_dim_station_info WHERE company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId))) GROUP BY cs.fk_station_code ORDER BY csAmt desc LIMIT 50;
# 计算某一时间段内各站点的销售总额并降序取前50
#siteYearAndMonthSumSql = SELECT cs.fk_station_code AS csCode,SUM( cs.sum ) AS csAmt FROM	cube_station_sale_info AS cs WHERE	cs.fk_sale_month IN ( SELECT date FROM cube_dim_sale_date WHERE date >=? AND date <? ) GROUP BY	cs.fk_station_code ORDER BY	csAmt DESC 	LIMIT 50
siteYearAndMonthSumSql = SELECT cs.fk_station_code AS csCode,SUM( cs.sum ) AS csAmt FROM	cube_station_sale_info AS cs WHERE	cs.fk_sale_month IN ( SELECT date FROM cube_dim_sale_date WHERE date >=:startTime AND date <:endTime ) AND cs.fk_station_code IN  (SELECT `code` FROM cube_dim_station_info WHERE company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId))) GROUP BY cs.fk_station_code ORDER BY	csAmt DESC LIMIT 50;
# 根据站点编号查询站点名字与对应编号
#codeNameSql =  SELECT  `code`,`name` FROM cube_dim_station_info
#codeNameSql =  SELECT  `code`,`name` FROM cube_dim_station_info WHERE company IN (SELECT `name` FROM base_company_info WHERE id IN(:companyId));
codeNameSql = SELECT cube.`code` AS code,cube.`name` AS name,bas.address AS address FROM cube_dim_station_info AS cube LEFT JOIN base_lottery_station AS bas ON  cube.`code` = bas.`code` WHERE cube.company IN (SELECT `name` FROM base_company_info WHERE id IN(:companyId));
# 查询站点每日自查自报各情况的数量和到目前为止累计总数，累计日志数量，每日快报统计情况
#monitorSql = SELECT (SELECT count(*) FROM task_check_self WHERE task_code like ? AND final_score_time is NOT null) AS alreadySubmitted ,(SELECT count(*) FROM task_check_self WHERE task_code like ? AND final_score_time  is  NULL) AS noSubmitssion,(SELECT count(*) FROM task_check_self ) AS alreadyAccumulated,(SELECT count(*) FROM daily_log WHERE date<= ?) AS logAccumulative,(SELECT count(*) FROM daily_express AS de WHERE de.push_date = ?) AS pushedExpress,(SELECT count(*) FROM daily_express AS de WHERE de.push_date = ? AND de.is_read = 1 ) AS readExpress
#monitorSql = SELECT (SELECT count(*) FROM task_check_self WHERE task_code like :time AND final_score_time is NOT null  AND station_company_id IN (:companyId)) AS alreadySubmitted ,(SELECT count(*) FROM task_check_self WHERE task_code like :time AND final_score_time is NULL AND station_company_id IN (:companyId)) AS noSubmitssion,(SELECT count(*) FROM task_check_self WHERE  station_company_id IN (:companyId)) AS alreadyAccumulated,(SELECT count(*) FROM daily_log WHERE date<= :newTime AND station_code IN (SELECT `code` FROM base_lottery_station WHERE company_id IN (:companyId))) AS logAccumulative,(SELECT count(*) FROM daily_express AS de WHERE de.push_date = :newTime AND station_id IN (SELECT id FROM base_lottery_station WHERE company_id IN (:companyId))) AS pushedExpress,(SELECT count(*) FROM daily_express AS de WHERE de.push_date = :newTime AND station_id IN (SELECT id FROM base_lottery_station WHERE company_id IN (:companyId)) AND de.is_read = 1 ) AS readExpress;
#monitorSql =SELECT (SELECT count(id) FROM task_check_self WHERE task_code LIKE :time AND final_score_time IS NOT NULL AND station_company_id IN ( :companyId )) AS alreadySubmitted,(SELECT count( id) FROM task_check_self WHERE task_code LIKE :time AND final_score_time IS NULL AND station_company_id IN ( :companyId )) AS noSubmitssion,(SELECT count(id) FROM task_check_self WHERE station_company_id IN (:companyId)) AS alreadyAccumulated,(SELECT count(id) FROM daily_log WHERE date <= :newTime ) AS logAccumulative,(SELECT count(id) FROM daily_express AS de WHERE de.push_date = :newTime AND station_id IN ( SELECT id FROM base_lottery_station WHERE company_id IN ( :companyId ))) AS pushedExpress,(SELECT count( id) FROM  daily_express AS de WHERE  de.push_date = :newTime AND station_id IN ( SELECT id FROM base_lottery_station WHERE company_id IN (:companyId ) ) AND de.is_read = 1 ) AS readExpress;
# monitorSql =SELECT (SELECT count(id) FROM task_check_self WHERE task_code LIKE :time AND final_score_time IS NOT NULL ) AS alreadySubmitted,(SELECT count( id) FROM task_check_self WHERE task_code LIKE :time AND final_score_time IS NULL ) AS noSubmitssion,(SELECT count(id) FROM task_check_self ) AS alreadyAccumulated,(SELECT count(id) FROM daily_log WHERE date <= :newTime ) AS logAccumulative,(SELECT count(id) FROM daily_express AS de WHERE de.push_date = :newTime AND station_id IN ( SELECT id FROM base_lottery_station )) AS pushedExpress,(SELECT count( id) FROM  daily_express AS de WHERE  de.push_date = :newTime AND station_id IN ( SELECT id FROM base_lottery_station  ) AND de.is_read = 1 ) AS readExpress;
# 查询站点每日自查自报各情况的数量和到目前为止累计总数，累计日志数量，每日快报统计情况 带站点表范围的,只查询正常的站点
monitorNewSql=SELECT (SELECT count(id) FROM task_check_self WHERE task_code LIKE :time AND final_score_time IS NOT NULL AND station_code in (SELECT `code` FROM base_lottery_station WHERE use_flag=1 and run_status ='1') ) AS alreadySubmitted,(SELECT count( id) FROM task_check_self WHERE task_code LIKE :time AND final_score_time IS NULL AND station_code in (SELECT `code` FROM base_lottery_station WHERE use_flag=1 and run_status ='1') ) AS noSubmitssion,(SELECT count(id) FROM task_check_self ) AS alreadyAccumulated,(SELECT count(id) FROM daily_log WHERE date <= :newTime ) AS logAccumulative,(SELECT count(id) FROM daily_express AS de WHERE de.push_date = :newTime AND station_id IN ( SELECT id FROM base_lottery_station WHERE  use_flag=1 and run_status ='1' )) AS pushedExpress,(SELECT count( id) FROM  daily_express AS de WHERE  de.push_date = :newTime AND station_id IN ( SELECT id FROM base_lottery_station WHERE  use_flag=1 and run_status ='1'  ) AND de.is_read = 1 ) AS readExpress;
# 查看当前站点状态实时情况（处于各状态的站点数量）
#statusSql =  SELECT bl.status AS stationCode ,count(id) AS stationNum FROM base_lottery_station AS bl WHERE (bl.`code` IN (select DISTINCT(fk_station_code) from cube_sales_info where fk_sale_date >=DATE_SUB(NOW(), INTERVAL 30 DAY)) or `status`!=0) GROUP BY bl.status
#statusSql = SELECT bl.status AS stationCode ,count(id) AS stationNum FROM base_lottery_station AS bl WHERE bl.use_flag = 1 AND  (bl.`code` IN (select DISTINCT(fk_station_code) from cube_sales_info where fk_sale_date >=DATE_SUB(NOW(), INTERVAL 30 DAY)) or `status`!=0) AND company_id in (:companyId) GROUP BY bl.status;
statusSql = SELECT bl.status AS stationCode ,count(id) AS stationNum FROM base_lottery_station AS bl WHERE bl.use_flag = 1 AND  (bl.`code` IN (select DISTINCT(fk_station_code) from cube_sales_info where fk_sale_date >=DATE_SUB(NOW(), INTERVAL 30 DAY)) or `status`!=0) AND company_id in (:companyId)  GROUP BY bl.status;
# 查看当前站点状态实时情况（处于各状态的站点数量）
#statusSql2= select station_status_daily_log.end_status AS stationCode,count(*) AS stationNum  from station_status_daily_log left join base_lottery_station on base_lottery_station.id = station_status_daily_log.station_id where station_status_daily_log.date = ? and (base_lottery_station.`code` IN (select DISTINCT(fk_station_code) from cube_sales_info where fk_sale_date >=DATE_SUB(?, INTERVAL 30 DAY) and fk_sale_date<=?) or station_status_daily_log.end_status!=0) group by station_status_daily_log.end_status
statusSql2 =  select station_status_daily_log.end_status AS stationCode,count(end_status) AS stationNum  from station_status_daily_log left join base_lottery_station on base_lottery_station.id = station_status_daily_log.station_id where station_status_daily_log.date = :newTime and (base_lottery_station.`code` IN (select DISTINCT(fk_station_code) from cube_sales_info where fk_sale_date >=DATE_SUB(:newTime, INTERVAL 30 DAY) and fk_sale_date<=:newTime) or station_status_daily_log.end_status!=0) AND base_lottery_station.company_id IN (:companyId) group by station_status_daily_log.end_status;
# 各类型某时间总数
# shopTypeNumberSql2 = SELECT type1, count(DISTINCT(code)) AS number FROM cube_dim_station_type_info WHERE date=? GROUP BY type1
shopTypeNumberSql = SELECT type1, count(DISTINCT(code)) AS number FROM cube_dim_station_type_info WHERE date=:startTime AND company IN (SELECT `name` FROM base_company_info WHERE id IN (:companyId)) GROUP BY type1 ;
# 各类型店铺销量
# shopTypeSalesSql = select type1 AS name,sum(sum) AS sale from cube_station_sale_info Left JOIN (select * from cube_dim_station_type_info where id in (select max(id) from cube_dim_station_type_info where date = ? group by code)) as a on a.`code` = cube_station_sale_info.fk_station_code  where cube_station_sale_info.fk_sale_month >= ? AND cube_station_sale_info.fk_sale_month < ? AND type1 IS NOT NULL   GROUP BY a.type1
# shopTypeSalesSql2 = SELECT type1 AS name,sum( sum ) AS sale FROM cube_station_sale_info left JOIN cube_dim_station_type_info AS a ON a.`code` = cube_station_sale_info.fk_station_code WHERE  a.date = ? AND cube_station_sale_info.fk_sale_month  >= ? and  cube_station_sale_info.fk_sale_month < ?  GROUP BY a.type1;
shopTypeSalesSql = SELECT type1 AS name,sum( sum ) AS sale FROM cube_station_sale_info left JOIN cube_dim_station_type_info AS a ON a.`code` = cube_station_sale_info.fk_station_code WHERE  a.date = :startTime AND cube_station_sale_info.fk_sale_month  >= :beginTime and  cube_station_sale_info.fk_sale_month < :endTime AND a.company IN (SELECT name FROM base_company_info WHERE id IN (:companyId)) GROUP BY a.type1;
# 各类型某时间各渠道数量
shopTypeCompanyNumberSql = SELECT type1,company, count(DISTINCT(code)) AS number FROM cube_dim_station_type_info WHERE date=? GROUP BY type1 ,company ORDER BY type1,number DESC;
# 各类型各渠道销量
# shopTypeCompanySaleSql = 	SELECT type1 AS storeName, company, sum( sum ) AS sale FROM cube_station_sale_info LEFT JOIN ( SELECT * FROM cube_dim_station_type_info WHERE id IN ( SELECT max( id ) FROM cube_dim_station_type_info WHERE date = ? GROUP BY CODE ) ) AS a ON a.`code` = cube_station_sale_info.fk_station_code WHERE cube_station_sale_info.fk_sale_month >= ? AND cube_station_sale_info.fk_sale_month < ? AND type1 IS NOT NULL  GROUP BY a.type1 ,a.company ORDER BY a.type1,sale desc;
shopTypeCompanySaleSql =  SELECT a.type1 AS storeName, a.company,SUM(sum) AS sale FROM cube_station_sale_info AS cu LEFT JOIN cube_dim_station_type_info AS a ON a.`code`=cu.fk_station_code  WHERE a.date =? AND cu.fk_sale_month>=? AND cu.fk_sale_month<? AND a.type1 IS NOT NULL GROUP BY a.type1,a.company ORDER BY a.type1,sale DESC;


# 验证每天同步数据的日期
synchroDateSql = SELECT fk_sale_date AS times FROM cube_sales_info ORDER BY id DESC LIMIT 1
# 游戏期销量
gameDrawSaleSql=SELECT bg.`name` AS bgname,bg.logo_url AS bglogo,sum(net_amt) as cnum , max(in_draw) as inDraw  FROM cube_draw_all_sales_info as cs LEFT JOIN base_game_type AS bg ON cs.fk_game_code = bg.`code` WHERE cs.draw_date >=:startTime and cs.draw_date<:endTime GROUP BY bg.`name`, bg.logo_url ORDER BY cnum DESC;
#单个游戏 时间段内销量
#oneGameSaleSql =SELECT bg.`name` AS name,bg.logo_url AS logoUrl, SUM(cs.net_amt) AS typeSales FROM cube_all_sales_info AS cs LEFT JOIN base_game_type AS bg ON cs.fk_game_code = bg.`code` where cs.company in (SELECT `name` FROM base_company_info WHERE id in (:companyId)) AND  cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime ) and bg.`code` ='64' ORDER BY typeSales DESC
oneGameSaleSql =SELECT bg.`name` AS name,bg.logo_url AS logoUrl, SUM(cs.net_amt) AS typeSales FROM cube_all_sales_info AS cs LEFT JOIN base_game_type AS bg ON cs.fk_game_code = bg.`code` where   cs.fk_sale_date IN (SELECT date FROM cube_dim_sale_date WHERE date>=:startTime AND date <:endTime ) and bg.`code` ='64' group by bg.`name`,bg.logo_url ORDER BY typeSales DESC


#查询所有具有市级用户,可切换分中心的用户清单
citySubCenTerSql=SELECT count(id) FROM base_analysis_user WHERE use_flag =1 and user_id =:userId;
#根据id 查询单个分中心对象
getByIdSubCenTerSql=SELECT id,name ,subcenter_name as subcenterName,responsible_area as regionName,role_id as roleId FROM base_subcenter_info WHERE id =:subCenterId;
#查询所有分中心
allSubCenTerSql=SELECT id,name ,subcenter_name as subcenterName,responsible_area as regionName,role_id as roleId FROM base_subcenter_info ORDER BY id;
# 根据用户级别为分中心的用户id,查询当前用户所属分中心
userSubCenterInfoSql=SELECT id,name ,subcenter_name as subcenterName,responsible_area as regionName,role_id as roleId FROM base_subcenter_info WHERE role_id in (SELECT role_id FROM core_system_user_to_role WHERE user_id in (SELECT id FROM core_system_user where role_level =:roleLevel and user_id =:userId));
# 根据分中心id 统计分中心管理站点总数 只统计正常的站点
countStationSql =SELECT count(id) as countStation FROM base_lottery_station WHERE subcenter_id =:subCenterId and run_status ='1' and use_flag ='1';
# 根据分中心id  计算分中心管理分中心 某段时间的各游戏销量
#sumGameSaleSql = SELECT MAX(fk_sale_date) as saleDate,fk_game_code as gameCode, (SELECT `name` FROM base_game_type WHERE `code` = fk_game_code) as gameName, sum(net_amt) as sumSale FROM cube_sales_info WHERE fk_station_code in (SELECT `code` FROM base_lottery_station WHERE subcenter_id =:subCenterId ) and fk_sale_date = (SELECT MAX(fk_sale_date) FROM cube_sales_info ) GROUP BY fk_game_code order by sumSale desc;
sumGameSaleSql=SELECT MAX(fk_sale_date) as saleDate,fk_game_code as gameCode, (SELECT `name` FROM base_game_type WHERE `code` = fk_game_code) as gameName, sum(net_amt) as sumSale FROM cube_sales_info WHERE subcenter_id =:subCenterId and fk_sale_date = (SELECT MAX(fk_sale_date) FROM cube_sales_info ) GROUP BY fk_game_code order by sumSale desc;

# 根据分中心id 查询出分中心,所有的站点标记记录 limit20
stationSignSql =SELECT station_code as stationCode,create_date as createDate,creator_id as creatorId,(SELECT `name` FROM core_system_user WHERE id =base_station_sign_info.creator_id ) as creatorUser FROM base_station_sign_info WHERE station_code in (SELECT `code` from base_lottery_station WHERE subcenter_id =:subCenterId) ORDER BY create_date desc LIMIT 20;

# 根据分中心id 查询出分中心,一段时间内所有的站点标记记录
stationSignDateSql =SELECT station_code as stationCode,create_date as createDate,creator_id as creatorId,(SELECT `name` FROM core_system_user WHERE id =base_station_sign_info.creator_id ) as creatorUser FROM base_station_sign_info WHERE station_code in (SELECT `code` from base_lottery_station WHERE subcenter_id =:subCenterId) and create_date>=:startDate and create_date<:endDate ORDER BY create_date desc 


# 根据分中心id 查询出所有站点信息 ,只查询运行状态正常的站点
# monitorStationSql=SELECT id as stationId, `code` as stationCode,sign_flag as signFlag, sign_address as signAddress,sign_longitude as signLongitude,sign_latitude as signLatitude,(SELECT `name` FROM base_group_info WHERE id = group_id) as groupName FROM base_lottery_station WHERE subcenter_id =:subCenterId and run_status ='1' and use_flag='1' order by sign_address desc ;
# monitorStationLikeSql=SELECT id as stationId, `code` as stationCode,sign_flag as signFlag, sign_address as signAddress,sign_longitude as signLongitude,sign_latitude as signLatitude,(SELECT `name` FROM base_group_info WHERE id = group_id) as groupName FROM base_lottery_station WHERE subcenter_id =:subCenterId and run_status ='1' and use_flag='1' and code like :stationCode order by sign_address desc ;
# 根据分中心id 查询出所有的专管员信息
monitorSupervisorSql=SELECT su.id as supervisorId,us.id as userId,us.`name` as userName,sm4decrypt(us.mobile) as userPhone,su.`status` as userStatus FROM base_supervisor as su left join core_system_user as us on su.user_id = us.id  WHERE subcenter_id =:subCenterId ORDER by userStatus DESC ;

# 根当前分中心,专管员ID ,查询 个人信息 名称,所属分中心, 管理站点数量(只看运行状态正常的)  站点列表(编号,地址,标记状态,标记地址,所属分组)
supervisorIdSql=SELECT id as supervisorId, (SELECT `name` FROM core_system_user WHERE id = user_id) as userName,(SELECT `name` FROM base_subcenter_info WHERE id = subcenter_id) as subCenterName FROM base_supervisor WHERE id =:supervisorId; 
countSupervisorStationSql=SELECT COUNT(id) from base_lottery_station WHERE supervisor_id =:supervisorId and run_status ='1' and use_flag ='1';
supervisorStationSql=SELECT  id as stationId,`code` as stationCode,address as stationAddress,is_assign as isAssign,sign_address as signAddress FROM base_lottery_station WHERE supervisor_id =:supervisorId and run_status ='1' and use_flag ='1' and subcenter_id =:subCenterId;

# 根据当前分中心 查询时间段内的 各游戏销量
subCenterGameSaleSql=SELECT cu.fk_game_code as gameCode,be.`name` as gameName,be.logo_url as logoUrl,sum(cu.net_amt) as sumSale FROM cube_sales_info as cu left JOIN base_game_type as be on cu.fk_game_code = be.`code` WHERE cu.subcenter_id =:subCenterId and cu.fk_sale_date >=:startDate and cu.fk_sale_date <:endDate GROUP BY cu.fk_game_code,be.`name`,be.logo_url;
#subCenterGameSaleSql=SELECT cu.fk_game_code as gameCode,be.`name` as gameName,be.logo_url as logoUrl,sum(cu.net_amt) as sumSale FROM cube_sales_info as cu left JOIN base_game_type as be on cu.fk_game_code = be.`code` WHERE cu.fk_station_code in (SELECT `code` FROM base_lottery_station WHERE subcenter_id=:subCenterId) and cu.fk_sale_date >=:startDate and cu.fk_sale_date <:endDate GROUP BY cu.fk_game_code,be.`name`,be.logo_url;
# 根据当前分中心 查询时间段内的 各区域各游戏销量
subCenterGameSaleSqlByRegion=SELECT cu.fk_game_code as gameCode,be.`name` as gameName,be.logo_url as logoUrl,sum(cu.net_amt) as sumSale FROM cube_sales_info as cu left JOIN base_game_type as be on cu.fk_game_code = be.`code` WHERE cu.subcenter_id=:subCenterId and cu.region_id=:regionId and cu.fk_sale_date >=:startDate and cu.fk_sale_date <:endDate GROUP BY cu.fk_game_code,be.`name`,be.logo_url;
#subCenterGameSaleSqlByRegion=SELECT cu.fk_game_code as gameCode,be.`name` as gameName,be.logo_url as logoUrl,sum(cu.net_amt) as sumSale FROM cube_sales_info as cu left JOIN base_game_type as be on cu.fk_game_code = be.`code` WHERE cu.fk_station_code in (SELECT `code` FROM base_lottery_station WHERE subcenter_id=:subCenterId and region_id=:regionId) and cu.fk_sale_date >=:startDate and cu.fk_sale_date <:endDate GROUP BY cu.fk_game_code,be.`name`,be.logo_url;
# 根据当前分中心 查询时间段内,每天销量
subCenterSaleSql=SELECT cu.fk_sale_date as saleDate,sum(cu.net_amt) as sumSale FROM cube_sales_info as cu WHERE cu.subcenter_id=:subCenterId and cu.fk_sale_date >=:startDate and cu.fk_sale_date <:endDate GROUP BY cu.fk_sale_date;
#subCenterSaleSql=SELECT cu.fk_sale_date as saleDate,sum(cu.net_amt) as sumSale FROM cube_sales_info as cu WHERE cu.fk_station_code in (SELECT `code` FROM base_lottery_station WHERE subcenter_id=:subCenterId) and cu.fk_sale_date >=:startDate and cu.fk_sale_date <:endDate GROUP BY cu.fk_sale_date;

# 获取游戏列表 根据销量表实时获取
saleGameSql=SELECT fk_game_code as gameCode,(SELECT `name` FROM base_game_type WHERE `code` = fk_game_code) as gameName,(SELECT show_order FROM base_game_type WHERE `code` = fk_game_code) as showOrder FROM cube_sales_info  GROUP BY fk_game_code order by showOrder;
# 获取区域列表 根据销量表实时获取
saleRegionSql=SELECT id,responsible_area as name FROM base_subcenter_info WHERE id =:subCenterId order by id desc;
regionSql=SELECT id,name FROM core_system_region WHERE name =:name AND use_flag='1' AND level='2' order by id desc;
# regionSqlNew=SELECT id,name FROM core_system_region WHERE use_flag='1' AND name NOT LIKE '%区%' AND level='2';
# 根据当前分中心 获取排名前 50 站点 的销量 分全部游戏与单一游戏
#stationSaleRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE subcenter_id=:subCenterId and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT 50;
stationSaleRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE subcenter_id=:subCenterId and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT :limits;
#stationSaleRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT sign_address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE fk_station_code in (SELECT `code` FROM base_lottery_station WHERE subcenter_id=:subCenterId) and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT 50;
#stationSaleOneGameRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE  subcenter_id=:subCenterId and fk_game_code =:gameCode and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT 50;
stationSaleOneGameRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE  subcenter_id=:subCenterId and fk_game_code =:gameCode and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT :limits;

# 根据当前分中心 获取排名前 50 站点 的销量 分全部区域与单一区域
#stationSaleRankSqlByRegion=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE  subcenter_id=:subCenterId and region_id=:regionId and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT 50;
#stationSaleOneGameRankSqlByRegion=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE  subcenter_id=:subCenterId and region_id=:regionId and fk_game_code =:gameCode and fk_sale_date >=:startDate and fk_sale_date <:endDate  GROUP BY fk_station_code order by sumSale desc LIMIT 50;

stationSaleRankSqlByRegion=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE  subcenter_id=:subCenterId and region_id=:regionId and fk_sale_date >=:startDate and fk_sale_date <:endDate GROUP BY fk_station_code order by sumSale desc LIMIT :limits;
stationSaleOneGameRankSqlByRegion=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT address FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationAddress,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName,(SELECT `name` FROM base_person_info WHERE id=(SELECT `shop_owner_id` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1)) as personName FROM cube_sales_info WHERE  subcenter_id=:subCenterId and region_id=:regionId and fk_game_code =:gameCode and fk_sale_date >=:startDate and fk_sale_date <:endDate  GROUP BY fk_station_code order by sumSale desc LIMIT :limits;
# 根据当前分中心 获取单个 站点 的销量 分全部游戏与单一游戏
# ontStationSaleRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName FROM cube_sales_info WHERE fk_sale_date >=:startDate and fk_sale_date <:endDate and fk_station_code =:stationCode;
oneStationSaleOneGameRankSql=SELECT fk_station_code as stationCode,sum(net_amt) as sumSale,(SELECT id FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationId,(SELECT `name` FROM base_lottery_station WHERE `code` = fk_station_code and use_flag=1 limit 1) as stationName FROM cube_sales_info WHERE fk_sale_date >=:startDate and fk_sale_date <:endDate and fk_game_code =:gameCode and fk_station_code =:stationCode;

#根据站点编号 查询站点信息
# stationInfoSql=SELECT `code` as stationCode,`name` as stationName,address as stationAddress,sign_flag as signFlag,sign_address as signAddress,run_status as runStatus, `status` as status,(SELECT `name` FROM core_system_region WHERE id = region_id) as regionName,(SELECT `name` FROM base_person_info WHERE id = shop_owner_id) as personName,(SELECT `name` FROM base_group_info WHERE id = group_id) as groupName FROM base_lottery_station WHERE `code` =:stationCode and use_flag ='1'
#根据站点编号查看是否存在该站点
stationInfoCountSql=SELECT ifnull(count(id),0) FROM base_lottery_station WHERE `code` =:stationCode and use_flag ='1';
#根据站点编号 查询站点信息
stationInfoSqlNew=SELECT id,ifnull(supervisor_id,0) as supervisorId,`code` as stationCode,`name` as stationName,address as stationAddress,sign_flag as signFlag,sign_address as signAddress,run_status as runStatus, `status` as status,(SELECT `name` FROM core_system_region WHERE id = region_id) as regionName,(SELECT `name` FROM base_person_info WHERE id = shop_owner_id) as personName,(SELECT phone FROM base_person_info WHERE id = shop_owner_id) as personPhone,(SELECT `name` FROM base_group_info WHERE id = group_id) as groupName FROM base_lottery_station WHERE `code` =:stationCode and use_flag ='1';
#根据站点编号 查询专管员名称
supervisorUserSql =SELECT  ifnull(`name`,'') as userName FROM core_system_user WHERE id in (SELECT user_id FROM base_supervisor WHERE id in (SELECT supervisor_id FROM base_lottery_station WHERE `code` =:stationCode and use_flag='1'))
#根据站点编号 查询专管员电话
supervisorUserSqlNew =SELECT  ifnull(`sm4decrypt(mobile)`,'') as userPhone FROM core_system_user WHERE id in (SELECT user_id FROM base_supervisor WHERE id in (SELECT supervisor_id FROM base_lottery_station WHERE `code` =:stationCode and use_flag='1'));

# 单个站点  各游戏销量
ontStationSaleGameSql=SELECT fk_game_code as gameCode,sum(net_amt) as sumSale,(SELECT `name` FROM base_game_type WHERE `code` = fk_game_code ) as gameName FROM cube_sales_info WHERE  fk_sale_date >=:startDate  and fk_sale_date <:endDate  and fk_station_code =:stationCode GROUP BY fk_game_code order by sumSale DESC;

#单个站点 周销量
stationWeakSaleSql=SELECT ifnull(sum(net_amt) ,0) AS gameSum , (SELECT `name` FROM base_game_type WHERE `code` = fk_game_code ) AS gameName FROM cube_sales_info WHERE fk_station_code =:stationCode AND fk_sale_date IN ( SELECT date FROM cube_dim_sale_date WHERE date >=:startDate AND date <:endDate ) GROUP BY fk_game_code;
#单个站点昨日销量
lastDaySaleSql=SELECT ifnull(sum(net_amt),0) FROM cube_sales_info WHERE fk_station_code =:stationCode  AND fk_sale_date >=:startDate and fk_sale_date <:endDate;
#获取今年站点的总销量
siteSale=SELECT SUM(cs.sum) AS netSum FROM cube_station_sale_info cs WHERE cs.fk_sale_month >= :startTime AND cs.fk_sale_month <= :endTime AND cs.fk_station_code = :stationCode;
siteGameSales=SELECT cs.fk_game_code AS gameCode,SUM(cs.sum) AS netSum FROM cube_station_sale_info cs WHERE	cs.fk_sale_month >= :startTime AND cs.fk_sale_month <= :endTime AND cs.fk_station_code = :stationCode GROUP BY cs.fk_game_code;
siteCitySale = SELECT SUM( cs.sum ) AS netSum,cs.fk_station_code AS csCode FROM	cube_station_sale_info cs , base_lottery_station b WHERE cs.fk_sale_month >= :startTime AND cs.fk_sale_month <= :endTime AND cs.fk_station_code = b.code AND b.run_status = 1 GROUP BY cs.fk_station_code ORDER BY netSum DESC;
siteSaleSubcenter=SELECT cs.fk_station_code AS csCode,SUM( cs.sum ) AS csAmt FROM cube_station_sale_info AS cs WHERE cs.fk_sale_month IN ( SELECT date FROM cube_dim_sale_date WHERE date >= :startTime AND date <= :endTime ) AND cs.fk_station_code IN ( SELECT `code` FROM base_lottery_station WHERE subcenter_id = :subCenterId AND use_flag =1 AND run_status = 1) GROUP BY cs.fk_station_code ORDER BY csAmt DESC;
siteSaleRegion=SELECT cs.fk_station_code AS csCode,SUM(cs.sum) AS csAmt FROM cube_station_sale_info AS cs WHERE cs.fk_sale_month IN ( SELECT date FROM cube_dim_sale_date WHERE date >= :startTime AND date <= :endTime ) AND cs.fk_station_code IN ( SELECT `code` FROM base_lottery_station WHERE region_id = :regionId AND use_flag =1 AND run_status = 1) GROUP BY cs.fk_station_code ORDER BY csAmt DESC;

#全市指定时间内的销量信息
citySaleSql=SELECT IFNULL(SUM(net_amt),0) FROM cube_all_sales_info WHERE fk_sale_date IN ( SELECT date FROM cube_dim_sale_date WHERE date >= :beginDate AND date < :endDate ) AND region <> '其他'

#全市指定游戏 指定时间内的销量信息
cityGameSaleSql=SELECT IFNULL(SUM(net_amt),0) FROM cube_all_sales_info WHERE fk_game_code = :gameCode AND fk_sale_date IN ( SELECT date FROM cube_dim_sale_date WHERE date >= :beginDate AND date < :endDate ) AND region <> '其他'

#指定区县 指定时间的销量信息
regionSaleSql=SELECT IFNULL(SUM(net_amt),0) FROM cube_all_sales_info WHERE fk_sale_date IN ( SELECT date FROM cube_dim_sale_date WHERE date >= :beginDate AND date < :endDate ) AND region IN (:regionList ) AND region <> '其他'

#指定区县 指定时间 指定游戏内的销量信息
regionGameSaleSql=SELECT IFNULL(SUM(net_amt),0) FROM cube_all_sales_info WHERE fk_game_code = :gameCode AND fk_sale_date IN ( SELECT date FROM cube_dim_sale_date WHERE date >= :beginDate AND date < :endDate ) AND region IN (:regionList ) AND region <> '其他'

#根据subcenterId获取对应销售部下管辖的regionName
RegionNamesSql=SELECT responsible_area FROM base_subcenter_info WHERE id = :subcenterId

#根据时间获取改时间段内所有的游戏编码
gameNamesSql=SELECT * FROM base_game_type WHERE `code` in (SELECT fk_game_code FROM cube_all_sales_info WHERE fk_sale_date >= :beginDate and fk_sale_date < :endDate GROUP BY fk_game_code)
#获取环球维修数据
repairSql=SELECT r.TRAAGT,r.REPAIRTYPE,r.REPAIRDATE,r.REPAIRNOTE,d.FINISHDATE,d.REPAIRRESULT FROM etl_app_dealinfo d,etl_app_repairinfo r WHERE  d.REPAIRID = r.REPAIRID AND RIGHT(r.TRAAGT,6) =  :stationCode;
#专管员管理的站点 降低查询时间减少manyToOne的实时加载
findBySupervisorId=select id,address,code,sign_flag as signFlag,sign_address as signAddress,(select name from base_group_info where s.group_id = id) as groupInfo_name from base_lottery_station s where s.use_flag = 1 and s.run_status =1 and s.supervisor_id = 13 ORDER BY s.sign_flag,s.id;
inspectionCountSql=SELECT station_code,count(*) AS count FROM inspection_submit_record WHERE `status` NOT IN (4) AND submit_date >= :monthBegin AND submit_date <= :monthEnd AND station_code IN (:codes) AND inspection_type = 2 AND use_flag = 1 GROUP BY station_code;
stationInspectionTaskSql=SELECT batch.task_id as Id ,batch.inspection_name as taskName,submit.station_code as stationCode,task.inspection_remark as remark ,batch.task_info as taskInfo from inspection_batch_info batch, inspection_submit_record submit, inspection_task_info task where submit.batch_id = batch.id AND batch.task_id = task.id AND batch.inspection_type = 2;
supervisionTaskNum=SELECT b.id,b.task_title,b.begin_date,b.end_date,a.supervisor_id  from task_to_supervisor a INNER JOIN task_supervisor_info b on a.task_id=b.id where b.use_flag=1 AND a.user_id=:userId;
#progressSum=SELECT count(*) from task_supervisor_submit_info where task_id=:taskId;
progressOutSum=SELECT count(*) from task_supervisor_submit_info where task_id=:taskId AND submit_flag=1;
#stationDistinctSql=SELECT s.id as stationId,s.code AS stationCode,IFNULL(a.distance,6378000.0) AS distance FROM base_lottery_station s LEFT JOIN (SELECT id,(SQRT(POWER(MOD(ABS(sign_longitude - :signLongitude),360),2) + POWER(ABS(sign_latitude - :signLatitude),2))*80*1000) AS distance FROM base_lottery_station)a ON a.id = s.id WHERE s.code IN (:stationCodes);
#stationSaleByTask=SELECT  fk_station_code AS stationCode,ifnull(SUM(net_amt),0) AS yesterdaySales FROM cube_sales_info WHERE fk_station_code IN (:stationCode) AND fk_sale_date >=:startDate and fk_sale_date <=:endDate GROUP BY fk_station_code;
#getSupervisionTaskNum=SELECT a.supervisor_id supervisorId,d.`name` username,a.task_id taskId,b.task_code taskCode,b.task_title taskTitle,count(1) executed,DATE_FORMAT(b.begin_date ,'%Y-%m-%d') beginDate,DATE_FORMAT(b.end_date,'%Y-%m-%d') endDate from task_supervisor_submit_info a INNER JOIN task_supervisor_info b on a.task_id=b.id INNER JOIN base_supervisor c on a.supervisor_id=c.id INNER JOIN core_system_user d on c.user_id=d.id where a.task_id=:taskId and submit_flag in(:submit_flag) and a.use_flag=1 and end_date>=NOW() GROUP BY a.supervisor_id;
inspectionStationExecutes=SELECT s.supervisor_id AS supervisorId, s.station_code AS stationCode, bs.id AS submitSupervisor FROM base_supervisor bs,inspection_submit_record s WHERE s.submit_flag = :submitFlag AND s.use_flag = 1 AND bs.user_id = s.user_id AND s.submit_date BETWEEN :monthBegin AND :monthEnd AND inspection_type = 0;
rectifyByStatus=SELECT s.supervisor_id AS supervisorId,s.station_code AS stationCode FROM inspection_submit_record AS s WHERE s.status IN (:status) AND s.submit_date BETWEEN :monthBegin AND :monthEnd AND s.inspection_type = '0';
getDistinctSupervisorInTaskIds=select distinct t.supervisor_id as supervisorId,t.task_id as taskId from task_supervisor_submit_info  t where t.use_flag = 1 and t.task_id in (:taskIds)
getAllInspectionStation=SELECT s.supervisor_id AS supervisorId, s.station_code AS stationCode,(SELECT bs.id FROM base_supervisor bs WHERE  s.user_id = bs.user_id ) AS submitSupervisor,s.submit_user AS submitUser,s.batch_id AS batchId,s.station_address AS stationAddress,s.supervisor_name AS supervisorName FROM inspection_submit_record s WHERE s.status in (:status) AND use_flag = 1 AND s.submit_date BETWEEN :monthBegin AND :monthEnd AND batch_id in (:batchIds) and inspection_type = 0
getAllInspectionSupervisors= SELECT s.supervisor_id as supervisorId,s.supervisor_name as supervisorName,s.user_id as submitSupervisor,s.submit_user as submitSupervisorName FROM inspection_submit_record s WHERE s.status in (0,1,2,3) AND use_flag = 1 AND s.submit_date BETWEEN :monthBegin AND :monthEnd AND batch_id in (:batchIds) and inspection_type = 0;
getAllInspecCount=SELECT s.code AS stationCode,s.subcenter_id AS subcenterId,s.supervisor_id as supervisorId FROM base_lottery_station s WHERE s.run_status = 1 AND s.use_flag = 1 AND (s.create_time < :openTime OR s.create_time is NULL) AND s.subcenter_id in (:subcenterIds) AND s.supervisor_id is not null;
#实时销量及站点数
getRealTimeSale=SELECT SUM(cs.CS_TICKET_PRICE) AS totalSales,count(DISTINCT s_station) AS stationNum,count(cs_ticket_mark) AS tickerNum FROM cs AS cs INNER JOIN cp AS cp ON cs.CS_CP_FK = cp.CP_PK INNER JOIN d AS d ON cs.CS_DATE_FK = d.D_PK INNER JOIN s AS s ON cs.CS_S_FK = s.S_PK WHERE d.d_dayofyear = :time;
#日实时销量分游戏
getGameRealTimeSale=SELECT SUM(cs.CS_TICKET_PRICE) AS totalSales,cp.cp_catory AS gameName FROM cs AS cs INNER JOIN cp AS cp ON cs.CS_CP_FK = cp.CP_PK INNER JOIN d AS d ON cs.CS_DATE_FK = d.D_PK INNER JOIN s AS s ON cs.CS_S_FK = s.S_PK WHERE d.d_dayofyear = :time GROUP BY cp.cp_catory;
#期实时销量分游戏
getGameIssueRealTimeSale=SELECT cp.cp_catory AS gameName,SUM( cs.CS_TOTAL_PRICE ) AS totalSales FROM cs INNER JOIN issue on cs.cs_issue_fk = issue.issue_pk INNER JOIN cp on cs.cs_cp_fk = cp.cp_pk WHERE issue.issue_pk <= :time AND cp.cp_catory IN (:gameList) GROUP BY cp.cp_catory;
#获取区销售部实时销量
getTodayRealTimeSale=SELECT s.s_district AS REGION, SUM(cs.CS_TOTAL_PRICE) AS PRICE FROM cs INNER JOIN s ON s.s_pk = cs.cs_s_fk INNER JOIN d ON cs.cs_date_fk = d.d_pk AND d.d_dayofyear = :todayDate GROUP BY s.s_district;
#获取游戏时段销量
getGameHourSales=SELECT t.t_hourofday AS HOUR, SUM(cs.cs_total_price) AS sale FROM cs INNER JOIN cp ON cs.cs_cp_fk = cp.cp_pk INNER JOIN t ON cs.cs_time_fk = t.t_pk INNER JOIN d ON cs.cs_date_fk = d.d_pk AND d.d_dayofyear = :todayDate INNER JOIN s ON s.s_pk = cs.cs_s_fk WHERE cp.cp_catory in (:gameType) GROUP BY t.t_hourofday ORDER by t.t_hourofday;
#获取站点实时排名
getTodayStationSalesRank=SELECT s.s_station AS stationCode, SUM(cs.cs_total_price) AS sale FROM cs INNER JOIN s ON cs.cs_s_fk = s.s_pk INNER JOIN d ON cs.cs_date_fk = d.d_pk AND d.d_dayofyear = :todayDate GROUP BY s.s_station ORDER BY sale DESC LIMIT 0,50;
#获取年度历史销量
getYearSale=SELECT ifnull(sum(net_amt),0) AS totalSales FROM cube_sales_info WHERE fk_sale_date >=:beginDate AND fk_sale_date <= :endDate;
#获取年度期销量
getYearIssueSale=SELECT ifnull(sum( net_amt ),0) AS totalSales FROM cube_draw_all_sales_info WHERE draw_date >=:beginDate AND draw_date <:endDate;
#期实时销量
getIssueRealTimeSale=SELECT SUM( cs.CS_TOTAL_PRICE ) AS totalSales FROM cs INNER JOIN issue on cs.cs_issue_fk = issue.issue_pk INNER JOIN cp on cs.cs_cp_fk = cp.cp_pk WHERE issue.issue_pk <= :time;

# 决策通 专管员任务统计 任务维度
getAnalysisTaskDetailList=SELECT tsi.id AS taskId, tsi.task_code AS taskCode, tsi.task_title AS taskTitle, tsi.begin_date AS beginDate, tsi.end_date AS endDate, CONCAT(tsi.begin_date, "-", tsi.end_date) AS effectiveDate, COUNT(tssi.submit_flag=1 or NULL)/COUNT(tssi.id) AS totalExecute FROM task_supervisor_info tsi INNER JOIN task_supervisor_submit_info tssi ON tsi.id = tssi.task_id WHERE tsi.use_flag = 1 AND tsi.subcenter_id = :subcenterId AND tsi.`status` = 1 AND if(:completeStatus, tsi.complete_status !=0 , tsi.complete_status=0) GROUP BY tsi.id;
getAnalysisTaskSubmitDetailList=SELECT tts.task_id AS taskId, tts.supervisor_id AS supervisionId, csu.name AS username, COUNT(tssi.status=1 OR NULL) AS executed, COUNT(tssi.status=0 OR NULL) AS notExecuted, COUNT(tssi.id) AS totalExecute, COUNT(tssh.id) AS reviewCount, COUNT(tssi.status=1 OR NULL)/ COUNT(tssi.id) AS complareRate FROM task_to_supervisor tts INNER JOIN base_supervisor bs ON tts.supervisor_id = bs.id INNER JOIN core_system_user csu ON bs.user_id = csu.id INNER JOIN task_supervisor_submit_info tssi ON tts.task_id = tssi.task_id AND tts.supervisor_id = tssi.supervisor_id LEFT JOIN task_supervisor_submit_history tssh ON tssh.task_submit_id = tssi.id WHERE tts.task_id IN (:taskIds) GROUP BY tts.task_id, tts.supervisor_id;
